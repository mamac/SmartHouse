<?php

namespace Lljm\HomeBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * HumidlogRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HumidlogRepository extends EntityRepository
{
  public function getNumRecords()
  {
    $em = $this->getEntityManager();
    $query = $em->createQuery("
                  select COUNT(f.id) 
                  from LljmHomeBundle:Humidlog f
                  ");

    return $query->getSingleScalarResult();
  }

  public function getHumidlogs($nbPerPage, $datefrom, $dateto)
  {

    $em = $this->getEntityManager();
    $query = $em->createQuery("
      SELECT
      a.node,
      a.humvalue,
      a.daterx,
      c.zonename
      FROM LljmHomeBundle:Humidlog a
      LEFT JOIN LljmHomeBundle:Node b WITH a.node = b.nodeguid
      LEFT JOIN LljmHomeBundle:Zone c WITH b.nodezone = c.id
      WHERE a.daterx BETWEEN '$datefrom' and '$dateto' 
      ORDER BY a.daterx desc
      ")
      ->setMaxResults($nbPerPage)
    ;

    return $query->getResult();
  }

  public function getHumidcharts($daterx)
  {

    $em = $this->getEntityManager();
    $query = $em->createQuery("
      SELECT
      c.id,
      c.zonename,
      a.humvalue,
      a.daterx
      FROM LljmHomeBundle:Humidlog a
      LEFT JOIN LljmHomeBundle:Node b WITH a.node = b.nodeguid
      LEFT JOIN LljmHomeBundle:Zone c WITH b.nodezone = c.id
      WHERE a.daterx like '".$daterx."%'
      ORDER BY c.id, a.daterx
      ")
    ;

    return $query->getResult();

  }
}
